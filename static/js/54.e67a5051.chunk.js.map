{"version":3,"file":"static/js/54.e67a5051.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","APIService/API.js","components/Loader/Loader.styled.js","components/Loader/Loader.js","components/MovieCast/MovieCast.styled.js","components/MovieCast/MovieCast.js"],"sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}","const API_KEY = 'api_key=769fcbb48918d83fb14b0a6771770fda';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst TREND_DAY = 'trending/movie/day';\nexport const IMAGE_PATH = 'https://image.tmdb.org/t/p/w300';\n\nexport async function getMovies() {\n  return await fetch(`${BASE_URL}${TREND_DAY}?${API_KEY}`).then(response =>\n    response.json()\n  );\n}\n\nexport async function searchMovies(query) {\n  return await fetch(`${BASE_URL}search/movie?${API_KEY}&query=${query}`).then(\n    response => {\n      if (!response.ok) {\n        throw new Error('No data');\n      }\n\n      return response.json();\n    }\n  );\n}\n\nexport async function getMovieDetails(movieId) {\n  return await fetch(\n    `${BASE_URL}movie/${movieId}?${API_KEY}&language=en-US`\n  ).then(response => {\n    if (!response.ok) {\n      throw new Error('No data');\n    }\n\n    return response.json();\n  });\n}\n\nexport async function getMoviesCredits(movieId) {\n  return await fetch(\n    `${BASE_URL}movie/${movieId}/credits?${API_KEY}&language=en-US`\n  ).then(response => {\n    if (!response.ok) {\n      throw new Error('No data');\n    }\n\n    return response.json();\n  });\n}\n\nexport async function getMoviesReviews(movieId) {\n  return await fetch(\n    `${BASE_URL}movie/${movieId}/reviews?${API_KEY}&language=en-US&page=1}`\n  ).then(response => {\n    if (!response.ok) {\n      throw new Error('No data');\n    }\n\n    return response.json();\n  });\n}\n","import styled from '@emotion/styled';\n\nexport const DnaBox = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n","import { DnaBox } from './Loader.styled';\nimport { Dna } from 'react-loader-spinner';\n\nfunction LoaderDna() {\n  return (\n    <DnaBox>\n      <Dna\n        visible={true}\n        height=\"80\"\n        width=\"80\"\n        ariaLabel=\"dna-loading\"\n        wrapperStyle={{}}\n        wrapperClass=\"dna-wrapper\"\n      />\n    </DnaBox>\n  );\n}\n\nexport default LoaderDna;\n","import styled from '@emotion/styled';\n\nexport const CastList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nexport const CastItem = styled.li`\n  list-style: none;\n  margin-bottom: 20px;\n  margin-right: 10px;\n  box-shadow: 0px 15px 20px -10px #00b3e5;\n  border-radius: 4px;\n  width: 200px;\n  padding: 10px;\n`;\n\nexport const CastImg = styled.img`\n  width: 200px;\n  height: auto;\n`;\n","import { getMoviesCredits } from 'APIService/API';\nimport LoaderDna from 'components/Loader/Loader';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { IMAGE_PATH } from 'APIService/API';\nimport { CastImg, CastItem, CastList } from './MovieCast.styled';\n\nconst defaultImg = `https://kartinkin.net/uploads/posts/2022-02/thumbs/1645764528_2-kartinkin-net-p-na-profil-kartinki-2.jpg`;\n\nfunction MovieCast() {\n  const [cast, setCast] = useState();\n  const [isLoading, setIsLoading] = useState(false);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    setIsLoading(true);\n    getMoviesCredits(movieId)\n      .then(res => setCast(res.cast))\n      .catch(error => console.log(error))\n      .finally(setIsLoading(false));\n  }, [movieId]);\n\n  return (\n    <>\n      {isLoading && <LoaderDna />}\n      {cast?.length > 0 ? (\n        <CastList>\n          {cast.map(\n            ({ credit_id, character, name: characterName, profile_path }) => (\n              <CastItem key={credit_id}>\n                <CastImg\n                  src={\n                    profile_path\n                      ? `${IMAGE_PATH}${profile_path}`\n                      : `${defaultImg}`\n                  }\n                  alt={characterName}\n                />{' '}\n                <p>{characterName}</p>\n                <p>Character: {character}</p>\n              </CastItem>\n            )\n          )}\n        </CastList>\n      ) : (\n        <div>Information does not exists.</div>\n      )}\n    </>\n  );\n}\n\nexport default MovieCast;\n"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","API_KEY","BASE_URL","TREND_DAY","IMAGE_PATH","getMovies","fetch","response","json","searchMovies","query","ok","Error","getMovieDetails","movieId","getMoviesCredits","getMoviesReviews","DnaBox","styled","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","CastList","CastItem","CastImg","useState","cast","setCast","isLoading","setIsLoading","useParams","useEffect","res","catch","console","log","finally","Loader","length","map","credit_id","character","characterName","name","profile_path","src","alt"],"sourceRoot":""}